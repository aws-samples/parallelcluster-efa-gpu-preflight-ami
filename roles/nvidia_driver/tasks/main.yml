---
- name: "Check dependencies"
  block:
  - name: Install kernel packages for current version
    yum:
      name:
        - kernel-headers-{{ ansible_kernel }}
        - kernel-devel-{{ ansible_kernel }}
      state: present
  rescue:
  - name: Update to latest supported version
    yum:
      name:
        - kernel-devel
        - kernel-headers
      state: latest
  - name: reboot to pick up the new kernel
    notify: system-reboot

- name: "Install additional dependencies"
  ansible.builtin.yum:
    name:
      - gcc10
      - kernel-devel
      - kernel-headers
      - dkms
    state: present

- name: blacklist nouveau
  kernel_blacklist:
    name: nouveau
    state: present

- name: "Download the NVidia Installer"
  ansible.builtin.get_url:
    url: "https://us.download.nvidia.com/tesla/{{ nvidia_driver_version }}/NVIDIA-Linux-x86_64-{{ nvidia_driver_version }}.run"
    dest: "/tmp/nvidia-installer.run"
    mode: '0755'
  
- name: "Install Nvidia drivers"
  ansible.builtin.shell: "sudo CC=gcc10-cc sh /tmp/nvidia-installer.run -q -a --ui=none"

- name: enable persistenced
  systemd:
    name: nvidia-persistenced
    enabled: yes

- name: "Flush handlers"
  meta: flush_handlers

- name: "Install Nvidia Fabric Manager"
  block:
    - name: "Download fabric manager"
      ansible.builtin.get_url:
        url: "https://developer.download.nvidia.com/compute/nvidia-driver/redist/fabricmanager/linux-x86_64/fabricmanager-linux-x86_64-{{ nvidia_driver_version }}-archive.tar.xz"
        dest: "/tmp/nvidia-fabricmanager.tar.xz"
        mode: "0644"

    - name: "Extract fabric manager"
      ansible.builtin.unarchive:
        src: "/tmp/nvidia-fabricmanager.tar.xz"
        dest: "/usr/"
        remote_src: true
        extra_opts:
          - --strip-components=1
          - --exclude
          - LICENSE

    - name: "Link fabric manager service file"
      copy:
        remote_src: true
        src: "/usr/systemd/nvidia-fabricmanager.service"
        dest: "/usr/lib/systemd/system/nvidia-fabricmanager.service"

    - name: "Enable fabric manager"
      ansible.builtin.systemd:
        name: nvidia-fabricmanager
        daemon-reload: true
        enabled: true
      notify: system-reboot

  when: install_nvidia_fabric_manager

- name: "Flush handlers"
  meta: flush_handlers
